on: [push]

env:
  REGISTRY_DOMAIN: ${{ secrets.REGISTRY_DOMAIN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GIT_CI_EMAIL: ${{ secrets.GIT_CI_EMAIL }}
  GIT_CI_NAME: ${{ secrets.GIT_CI_NAME }}
  GIT_CI_USERNAME: ${{ secrets.GIT_CI_USERNAME }}
  GIT_CI_PASSWORD: ${{ secrets.GIT_CI_PASSWORD }}
  GIT_REPO_DOMAIN: ${{ secrets.GIT_REPO_DOMAIN }}

jobs:
  build:
    name: Build/test and push
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      # - name: Testing
      #   run: |
      #     npm install
      #     npm run lint
      #     npm run test
      - name: Bump Version (Patch)
        #if: github.event.pull_request.head.repo.full_name == github.repository && github.ref == 'refs/heads/master'
        run: |
          git config --global user.email "$GIT_CI_EMAIL"
          git config --global user.name "$GIT_CI_NAME"
          npm version patch -m "Update version to %s [skip ci]"
          git push https://$GIT_CI_USERNAME:$GIT_CI_PASSWORD@$GIT_REPO_DOMAIN/chrisleekr/nodejs-image-optimisation.git HEAD:$GITHUB_REF
      # - name: Build production
      #   #if: github.event.pull_request.head.repo.full_name == github.repository && github.ref == 'refs/heads/master'
      #   run: |
      #     echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin $REGISTRY_DOMAIN
      #     PACKAGE_VERSION=$(grep version package.json | cut -c 15- | rev | cut -c 3- | rev)
      #     docker build . --build-arg PACKAGE_VERSION=$PACKAGE_VERSION --build-arg NODE_ENV=production --target production-stage -t $REGISTRY_DOMAIN/chrisleekr/nodejs-image-optimisation:latest -t $REGISTRY_DOMAIN/chrisleekr/nodejs-image-optimisation:$PACKAGE_VERSION
      #     docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-image-optimisation:$PACKAGE_VERSION
      #     docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-image-optimisation:latest
